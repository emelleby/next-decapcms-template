# Use DecapBridge auth (required)
backend:
  name: git-gateway
  repo: emelleby/harestuabil
  branch: master
  identity_url: https://auth.decapbridge.com/sites/45671773-d2dc-404d-8b02-ef0463330547
  gateway_url: https://gateway.decapbridge.com

  # Quickly see who did what (optional)
  commit_messages:
    create: Create {{collection}} “{{slug}}” - {{author-name}} <{{author-login}}> via DecapBridge
    update: Update {{collection}} “{{slug}}” - {{author-name}} <{{author-login}}> via DecapBridge
    delete: Delete {{collection}} “{{slug}}” - {{author-name}} <{{author-login}}> via DecapBridge
    uploadMedia: Upload “{{path}}” - {{author-name}} <{{author-login}}> via DecapBridge
    deleteMedia: Delete “{{path}}” - {{author-name}} <{{author-login}}> via DecapBridge
    openAuthoring: Message {{message}} - {{author-name}} <{{author-login}}> via DecapBridge

# Better Decap + Bridge logo (optional)
logo_url: https://decapbridge.com/decapcms-with-bridge.svg

# Add site links in DecapCMS (optional)
site_url: https://stellar-parfait-dade4f.netlify.app

media_folder: public/images
public_folder: /images
publish_mode: editorial_workflow

collections:
  - name: "config"
    label: "Config"
    delete: false
    editor:
      preview: false
    files:
      - name: "general"
        label: "Site Config"
        file: "config.json"
        description: "General site settings"
        fields:
          - label: "URL"
            name: "base_url"
            widget: "string"
            hint: "Do not enter the trailing slash of the URL"
          - label: "Site title"
            name: "site_title"
            widget: "string"
          - label: "Site description"
            name: "site_description"
            widget: "string"
          - label: "Site keywords"
            name: "site_keywords"
            widget: "list"
            summary: "{{fields.keyword.keyword}}"
            field:
              label: Keyword
              name: keyword
              widget: "string"
          - label: "Twitter account"
            name: "twitter_account"
            widget: "string"
          - label: "GitHub account"
            name: "github_account"
            widget: "string"

  - name: "meta"
    label: "Meta"
    delete: false
    editor:
      preview: false
    files:
      - name: "authors"
        label: "Authors"
        file: "meta/authors.yml"
        description: "Author descriptions"
        fields:
          - name: authors
            label: Authors
            label_singular: "Author"
            widget: list
            fields:
              - label: "Slug"
                name: "slug"
                widget: "string"
                hint: "The part of a URL identifies the author"
              - label: "Name"
                name: "name"
                widget: "string"
                hint: "First and Last"
              - label: "Introduction"
                name: "introduction"
                widget: "text"
      - name: "tags"
        label: "Tags"
        file: "meta/tags.yml"
        description: "List of tags"
        fields:
          - name: tags
            label: Tags
            label_singular: "Tag"
            widget: list
            fields:
              - label: "Slug"
                name: "slug"
                widget: "string"
                hint: "The part of a URL identifies the tag"
              - label: "Display Name"
                name: "name"
                widget: "string"
                hint: "Tag name for displaying on the site"

  - name: "posts"
    label: "Posts"
    folder: "content/posts/"
    extension: "mdx"
    format: "frontmatter"
    create: true
    slug: "{{slug}}"
    identifier_field: slug
    summary: "{{title}}"
    fields:
      - label: "Slug"
        name: "slug"
        widget: "string"
      - label: "Title"
        name: "title"
        widget: "string"
      - label: "Publish Date"
        name: "date"
        widget: "datetime"
        format: "YYYY-MM-DD"
        dateFormat: "YYYY-MM-DD"
        timeFormat: false
      - label: Author
        name: "author"
        widget: relation
        collection: "meta"
        file: "authors"
        searchFields:
          - "authors.*.name"
        displayFields:
          - "authors.*.name"
        valueField: "authors.*.slug"
      - label: Tags
        label_singular: "Tag"
        name: "tags"
        widget: list
        summary: "{{fields.tag}}"
        field:
          label: Tag
          name: tag
          widget: relation
          collection: "meta"
          file: "tags"
          searchFields:
            - "tags.*.name"
          displayFields:
            - "tags.*.name"
          valueField: "tags.*.slug"
      - label: "Body"
        name: "body"
        widget: "markdown"

  - name: "pages"
    label: "Pages"
    folder: "content/pages/"
    extension: "mdx"
    format: "frontmatter"
    create: true
    slug: "{{slug}}"
    identifier_field: slug
    summary: "{{title}}"
    fields:
      - label: "Slug"
        name: "slug"
        widget: "string"
        hint: "URL-friendly identifier for the page (e.g., 'about', 'contact')"
      - label: "Title"
        name: "title"
        widget: "string"
        hint: "Page title that will appear in the browser tab and as the main heading"
      - label: "Description"
        name: "description"
        widget: "text"
        required: false
        hint: "Optional meta description for SEO (recommended: 150-160 characters)"
      - label: "Keywords"
        name: "keywords"
        widget: "list"
        required: false
        summary: "{{fields.keyword}}"
        field:
          label: "Keyword"
          name: "keyword"
          widget: "string"
        hint: "SEO keywords for this page"
      - label: "Last Updated"
        name: "updated"
        widget: "datetime"
        format: "YYYY-MM-DD"
        dateFormat: "YYYY-MM-DD"
        timeFormat: false
        required: false
        hint: "When this page was last updated (optional)"
      - label: "Body"
        name: "body"
        widget: "markdown"
        hint: "Page content in Markdown format. You can use MDX components here."
